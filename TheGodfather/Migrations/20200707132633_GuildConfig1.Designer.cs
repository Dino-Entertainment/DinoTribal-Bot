// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TheGodfather.Database;

namespace TheGodfather.Migrations
{
    [DbContext(typeof(TheGodfatherDbContext))]
    [Migration("20200707132633_GuildConfig1")]
    partial class GuildConfig1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("gf")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("TheGodfather.Database.Models.BlockedChannel", b =>
                {
                    b.Property<long>("ChannelIdDb")
                        .HasColumnName("cid")
                        .HasColumnType("bigint");

                    b.Property<string>("Reason")
                        .HasColumnName("reason")
                        .HasColumnType("character varying(64)")
                        .HasMaxLength(64);

                    b.HasKey("ChannelIdDb");

                    b.ToTable("blocked_channels");
                });

            modelBuilder.Entity("TheGodfather.Database.Models.BlockedUser", b =>
                {
                    b.Property<long>("UserIdDb")
                        .HasColumnName("uid")
                        .HasColumnType("bigint");

                    b.Property<string>("Reason")
                        .HasColumnName("reason")
                        .HasColumnType("character varying(64)")
                        .HasMaxLength(64);

                    b.HasKey("UserIdDb");

                    b.ToTable("blocked_users");
                });

            modelBuilder.Entity("TheGodfather.Database.Models.BotStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Activity")
                        .HasColumnName("activity_type")
                        .HasColumnType("integer");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnName("status")
                        .HasColumnType("character varying(64)")
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.ToTable("bot_statuses");
                });

            modelBuilder.Entity("TheGodfather.Database.Models.GuildConfig", b =>
                {
                    b.Property<long>("GuildIdDb")
                        .HasColumnName("gid")
                        .HasColumnType("bigint");

                    b.Property<short>("AntiInstantLeaveCooldown")
                        .HasColumnName("antiinstantleave_cooldown")
                        .HasColumnType("smallint");

                    b.Property<bool>("AntiInstantLeaveEnabled")
                        .HasColumnName("antiinstantleave_enabled")
                        .HasColumnType("boolean");

                    b.Property<byte>("AntifloodAction")
                        .HasColumnName("antiflood_action")
                        .HasColumnType("smallint");

                    b.Property<short>("AntifloodCooldown")
                        .HasColumnName("antiflood_cooldown")
                        .HasColumnType("smallint");

                    b.Property<bool>("AntifloodEnabled")
                        .HasColumnName("antiflood_enabled")
                        .HasColumnType("boolean");

                    b.Property<short>("AntifloodSensitivity")
                        .HasColumnName("antiflood_sensitivity")
                        .HasColumnType("smallint");

                    b.Property<byte>("AntispamAction")
                        .HasColumnName("antispam_action")
                        .HasColumnType("smallint");

                    b.Property<bool>("AntispamEnabled")
                        .HasColumnName("antispam_enabled")
                        .HasColumnType("boolean");

                    b.Property<short>("AntispamSensitivity")
                        .HasColumnName("antispam_sensitivity")
                        .HasColumnType("smallint");

                    b.Property<string>("Currency")
                        .HasColumnName("currency")
                        .HasColumnType("character varying(32)")
                        .HasMaxLength(32);

                    b.Property<long?>("LeaveChannelIdDb")
                        .HasColumnName("leave_cid")
                        .HasColumnType("bigint");

                    b.Property<string>("LeaveMessage")
                        .HasColumnName("leave_msg")
                        .HasColumnType("character varying(128)")
                        .HasMaxLength(128);

                    b.Property<bool>("LinkfilterBootersEnabled")
                        .HasColumnName("linkfilter_booters")
                        .HasColumnType("boolean");

                    b.Property<bool>("LinkfilterDiscordInvitesEnabled")
                        .HasColumnName("linkfilter_invites")
                        .HasColumnType("boolean");

                    b.Property<bool>("LinkfilterDisturbingWebsitesEnabled")
                        .HasColumnName("linkfilter_disturbing")
                        .HasColumnType("boolean");

                    b.Property<bool>("LinkfilterEnabled")
                        .HasColumnName("linkfilter_enabled")
                        .HasColumnType("boolean");

                    b.Property<bool>("LinkfilterIpLoggersEnabled")
                        .HasColumnName("linkfilter_loggers")
                        .HasColumnType("boolean");

                    b.Property<bool>("LinkfilterUrlShortenersEnabled")
                        .HasColumnName("linkfilter_shorteners")
                        .HasColumnType("boolean");

                    b.Property<string>("Locale")
                        .HasColumnName("locale")
                        .HasColumnType("character varying(8)")
                        .HasMaxLength(8);

                    b.Property<long?>("LogChannelIdDb")
                        .HasColumnName("log_cid")
                        .HasColumnType("bigint");

                    b.Property<long?>("MuteRoleIdDb")
                        .HasColumnName("mute_rid")
                        .HasColumnType("bigint");

                    b.Property<string>("Prefix")
                        .HasColumnName("prefix")
                        .HasColumnType("character varying(8)")
                        .HasMaxLength(8);

                    b.Property<byte>("RatelimitAction")
                        .HasColumnName("ratelimit_action")
                        .HasColumnType("smallint");

                    b.Property<bool>("RatelimitEnabled")
                        .HasColumnName("ratelimit_enabled")
                        .HasColumnType("boolean");

                    b.Property<short>("RatelimitSensitivity")
                        .HasColumnName("ratelimit_sensitivity")
                        .HasColumnType("smallint");

                    b.Property<bool>("ReactionResponse")
                        .HasColumnName("silent_response_enabled")
                        .HasColumnType("boolean");

                    b.Property<bool>("SuggestionsEnabled")
                        .HasColumnName("suggestions_enabled")
                        .HasColumnType("boolean");

                    b.Property<long?>("WelcomeChannelIdDb")
                        .HasColumnName("welcome_cid")
                        .HasColumnType("bigint");

                    b.Property<string>("WelcomeMessage")
                        .HasColumnName("welcome_msg")
                        .HasColumnType("character varying(128)")
                        .HasMaxLength(128);

                    b.HasKey("GuildIdDb");

                    b.ToTable("guild_cfg");
                });
#pragma warning restore 612, 618
        }
    }
}
